>>> mylist = ['red','blue','green']
>>> mytuple = ('red','blue','green')
>>> print("list methods")
list methods
>>> print(dir(list))
['__add__', '__class__', '__class_getitem__', '__contains__', 
'__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', 
'__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__',
 '__hash__', '__iadd__', '__imul__', '__init__', '__init_subclass__', 
 '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', 
 '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__',
  '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', 
  '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 
  'index', 'insert', 'pop', 'remove', 'reverse', 'sort']
>>> print("tuple methods")
tuple methods
>>> print(dir(tuple))
['__add__', '__class__', '__class_getitem__', '__contains__', 
'__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__',
 '__getattribute__', '__getitem__', '__getnewargs__', '__gt__', 
 '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__', 
 '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', 
 '__reduce_ex__', '__repr__', '__rmul__', '__setattr__', '__sizeof__',
 '__str__', '__subclasshook__', 'count', 'index']

 >>> myset = {"red","green","blue"}
>>> print(myset)
{'blue', 'green', 'red'}
>>> print(type(myset))
<class 'set'>
>>> print("set method")
set method
>>> print(dir(set))
['__and__', '__class__', '__class_getitem__', '__contains__', 
'__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', 
'__getattribute__', '__gt__', '__hash__', '__iand__', '__init__', 
'__init_subclass__', '__ior__', '__isub__', '__iter__', '__ixor__', 
'__le__', '__len__', '__lt__', '__ne__', '__new__', '__or__',
 '__rand__', '__reduce__', '__reduce_ex__', '__repr__', '__ror__', 
 '__rsub__', '__rxor__', '__setattr__', '__sizeof__', '__str__', 
 '__sub__', '__subclasshook__', '__xor__', 'add', 'clear', 'copy',
  'difference', 'difference_update', 'discard', 'intersection', 
  'intersection_update', 'isdisjoint', 'issubset', 'issuperset', 
  'pop', 'remove', 'symmetric_difference', 
  'symmetric_difference_update', 'union', 'update']

>>> myset.add("purple")
>>> print(myset)
{'blue', 'green', 'red', 'purple'}
>>> print(len(myset)
... )
4
>>> myset.remove("purple")
>>> print(myset)
{'blue', 'green', 'red'}
>>> myset.remove("blue")
>>> print(myset)
{'green', 'red'}
>>> myset.remove("blue")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
KeyError: 'blue'
>>> myset.discard("blue")

>>> a = {1,2,3,4}
>>> b = {3,4,5,6}
>>> a.union(b)
{1, 2, 3, 4, 5, 6}
>>> a.intersection(b)
{3, 4}
>>> a.add(3)
>>> print(a)
{1, 2, 3, 4}
>>> a.add(b)

>>> a.difference(b)
{1, 2}
>>> b.difference(a)
{5, 6}

>>> dict = {100: "patric",1001:"rome",102:"prem"}
>>> print(dict)
{100: 'patric', 1001: 'rome', 102: 'prem'}
>>> dict[1001]
'rome'
>>> dict[102]
'prem'
>>> dict[103] = "rona"
>>> print(dict)
{100: 'patric', 1001: 'rome', 102: 'prem', 103: 'rona'}
>>> print(len(dict))
4
>>> dict[1001] = "helo"
>>> print(dict)
{100: 'patric', 1001: 'helo', 102: 'prem', 103: 'rona'}
>>>
